//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Es.Udc.DotNet.PracticaMaD.Model
{
    using System;
    using System.Text;
    using System.Collections.Generic;
    
    public partial class ImageSet
    {
        public ImageSet()
        {
            this.Comentario = new HashSet<Comment>();
            this.Tag = new HashSet<Tag>();
            this.UserProfile1 = new HashSet<UserProfile>();
        }
    
        public long Id { get; set; }
        public string Titulo { get; set; }
        public string Descripcion { get; set; }
        public System.DateTime FechaDeSubida { get; set; }
        public long usrId { get; set; }
        public byte[] Data { get; set; }
        public long CategoríaId { get; set; }
        public long EXIFId { get; set; }
        public long numLikes { get; set; }
        public string author { get; set; }
    
        
        /// <summary>
        /// Relationship Name (Foreign Key in ER-Model): FK_ImagenUserProfile
        /// </summary>
        public virtual UserProfile UserProfile { get; set; }
        
        /// <summary>
        /// Relationship Name (Foreign Key in ER-Model): CategoríaImagenSet
        /// </summary>
        public virtual Category Categoría { get; set; }
        
        /// <summary>
        /// Relationship Name (Foreign Key in ER-Model): ComentarioImagenSet
        /// </summary>
        public virtual ICollection<Comment> Comentario { get; set; }
        
        /// <summary>
        /// Relationship Name (Foreign Key in ER-Model): EXIFImageSet
        /// </summary>
        public virtual EXIF EXIF { get; set; }
        
        /// <summary>
        /// Relationship Name (Foreign Key in ER-Model): TagImageSet
        /// </summary>
        public virtual ICollection<Tag> Tag { get; set; }
        
        /// <summary>
        /// Relationship Name (Foreign Key in ER-Model): UserProfileImageSet
        /// </summary>
        public virtual ICollection<UserProfile> UserProfile1 { get; set; }
    
    	/// <summary>
    	/// A hash code for this instance, suitable for use in hashing algorithms and data structures 
    	/// like a hash table. It uses the Josh Bloch implementation from "Effective Java"
        /// Primary key of entity is not included in the hash calculation to avoid errors
    	/// with Entity Framework creation of key values.
    	/// </summary>
    	/// <returns>
    	/// Returns a hash code for this instance.
    	/// </returns>
    	/*public override int GetHashCode()
    	{
    	    unchecked
    	    {
    			int multiplier = 31;
    			int hash = GetType().GetHashCode();
    
    			hash = hash * multiplier + (Titulo == null ? 0 : Titulo.GetHashCode());
    			hash = hash * multiplier + (Descripcion == null ? 0 : Descripcion.GetHashCode());
    			hash = hash * multiplier + FechaDeSubida.GetHashCode();
    			hash = hash * multiplier + usrId.GetHashCode();
    			hash = hash * multiplier + Data.GetHashCode();
    			hash = hash * multiplier + CategoríaId.GetHashCode();
    			hash = hash * multiplier + EXIFId.GetHashCode();
    			hash = hash * multiplier + numLikes.GetHashCode();
    			hash = hash * multiplier + (author == null ? 0 : author.GetHashCode());
    
    			return hash;
    	    }
    
    	}
        
        /// <summary>
        /// Compare this object against another instance using a value approach (field-by-field) 
        /// </summary>
        /// <remarks>See http://www.loganfranken.com/blog/687/overriding-equals-in-c-part-1/ for detailed info </remarks>
    	public override bool Equals(object obj)
    	{
    
            if (ReferenceEquals(null, obj)) return false;        // Is Null?
            if (ReferenceEquals(this, obj)) return true;         // Is same object?
            if (obj.GetType() != this.GetType()) return false;   // Is same type?
    	    
            ImageSet target = obj as ImageSet;
    
    		return true
               &&  (this.Id == target.Id )       
               &&  (this.Titulo == target.Titulo )       
               &&  (this.Descripcion == target.Descripcion )       
               &&  (this.FechaDeSubida == target.FechaDeSubida )       
               &&  (this.usrId == target.usrId )       
               &&  (this.Data == target.Data )       
               &&  (this.CategoríaId == target.CategoríaId )       
               &&  (this.EXIFId == target.EXIFId )       
               &&  (this.numLikes == target.numLikes )       
               &&  (this.author == target.author )       
               ;
    
        }*/
    
    
    	public static bool operator ==(ImageSet  objA, ImageSet  objB)
        {
            // Check if the objets are the same ImageSet entity
            if(Object.ReferenceEquals(objA, objB))
                return true;
      
            return objA.Equals(objB);
    }
    
    
    	public static bool operator !=(ImageSet  objA, ImageSet  objB)
        {
            return !(objA == objB);
        }
    
    
        /// <summary>
        /// Returns a <see cref="T:System.String"></see> that represents the 
        /// current <see cref="T:System.Object"></see>.
        /// </summary>
        /// <returns>
        /// A <see cref="T:System.String"></see> that represents the current 
        /// <see cref="T:System.Object"></see>.
        /// </returns>
    	public override String ToString()
    	{
    	    StringBuilder strImageSet = new StringBuilder();
    
    		strImageSet.Append("[ ");
           strImageSet.Append(" Id = " + Id + " | " );       
           strImageSet.Append(" Titulo = " + Titulo + " | " );       
           strImageSet.Append(" Descripcion = " + Descripcion + " | " );       
           strImageSet.Append(" FechaDeSubida = " + FechaDeSubida + " | " );       
           strImageSet.Append(" usrId = " + usrId + " | " );       
           strImageSet.Append(" Data = " + Data + " | " );       
           strImageSet.Append(" CategoríaId = " + CategoríaId + " | " );       
           strImageSet.Append(" EXIFId = " + EXIFId + " | " );       
           strImageSet.Append(" numLikes = " + numLikes + " | " );       
           strImageSet.Append(" author = " + author + " | " );       
            strImageSet.Append("] ");    
    
    		return strImageSet.ToString();
        }
    
    
    }
}
